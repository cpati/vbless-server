server.port = 5051

# JPA Config
spring.jpa.show-sql=true
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect

# AWS parameters
aws.access_key_id=${AWS_ACCESS_KEY_ID}
aws.secret_access_key=${AWS_ACCESS_KEY}
s3.bucket=${S3_BUCKET}
s3.region=${S3_REGION}
cf.distribution=${CF_DISTRIBUTION}
aws.hosted_zone_id=${HOSTED_ZONE_ID}
aws.hosted_zone_name=${HOSTED_ZONE_NAME}
aws.alias_hosted_zone_id=${ALIAS_HOSTED_ZONE_NAME}
aws.alias_hosted_dns_name=${ALIAS_HOSTED_ZONE_DNS_NAME}

##SSO Params
okta.oauth2.issuer=${OKTA_OAUTH2_ISSUER}
okta.oauth2.clientId=${OKTA_OAUTH2_CLIENT_ID}
#okta.oauth2.clientSecret=${OKTA_OAUTH2_CLIENTSECRET}

## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.url = ${MYSQL_URL}
spring.datasource.username = ${MYSQL_USERNAME}
spring.datasource.password = ${MYSQL_PASSWORD}
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

## Hibernate Properties

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
spring.jpa.properties.hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update

spring.hateoas.use-hal-as-default-json-media-type=false

logging.file=/Users/chidanandapati/spring/vblessreloaded/myapp.log
logging.level.org.springframework.security=DEBUG
logging.level.com.sjsu=DEBUG
spring.thymeleaf.mode=LEGACYHTML5

email.userName=
email.password=